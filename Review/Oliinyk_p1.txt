# Олійник Микита ч1
### 1. Наскільки моделі є зрозумілими, наскільки вони описують предметну область, структуру та поведінку відповідної системи?

Модель добре описує базовий функціонал системи нотаток. 

### 2. Чи є якісь аспекти, які видаються важливими, але не відображені в моделі (на діаграмах)?



### 3. Чи є в моделі щось зайве, якісь аспекти описані занадто детально?

На діаграмі класів присутні класи що часто є вбудованими у мову програмування чи фреймворк (DateTime, Image, Label, PlainText). Якщо їх прибрати діаграма не втратить у повноті і стане чистішою для розуміння. 
На Use Case діаграмі деякі ноди могли б бути об'єднані у більш загальні, наприклад Change Color, Attach image, Convert Content у більш загальний Use Case "Change Note Appearance" і бути описані детальніше всередині юз кейсу.

### 4. Наскільки доцільно використані різні типи діаграм? 

Діаграми обрані доцільно і добре покривають описуємий функціонал. Проте видно, що Communication Diagram була взята з Sequence Diagram без істотних змін, що не додає нового представлення про систему, а просто візуалізує інформацію іншим чином, можна було б вказати додаткову інформацію.

### 5. Наскільки коректно використана нотація UML, різні елементи та конектори?

В загальному, нотація використана коректно, проте на Use Case діаграмі видно, що іноді плутається extend та include 

### 6. Наскільки вдалим є глосарій? Чи всі важливі поняття предметної області описано? Чи немає неоднозначностей?

Глосарій достатній для розуміння, проте варто було б на деяких діаграмах вказувати, що саме виконують певні ноди, наприклад Core з Package Diagram.

### 7. Чи всі важливі сценарії використання описано в моделі? Наскільки зрозумілі різні сценарії, зв’язки між ними?

Не дуже зрозумілим є переходи між пакетами на Package Diagram оскільки використана дуже високорівнева абстракція, варто було б розділити Core на логічні частини.

### 8. Наскільки доцільним є поділ системи на частини/компоненти/модулі/...?

Поділ досить чіткий, проте для кращого розуміння варто було б залишити нотатки, що саме реалізують компоненти.

### 9. Наскільки доцільними є зв’язки між компонентами/класами/об’єктами? Чи немає занадто тісно зв’язаних компонентів?



### 10. Наскільки object-oriented design відповідає загальним принципам?

Object-oriented design відповідає загальним принципам, проте видно сильну прив'язку до графічного інтерфейсу при описі функціоналу, наприклад, на Class Diagram використання Tab, Main Page.